<!doctype html>
<html lang="vi">
<head>
  <meta charset="utf-8" />
  <title>RBL Checker</title>
  <style>
    :root {
      --ok: #16a34a;
      --err: #ea580c;
      --listed: #dc2626;
      --muted: #6b7280;
      --border: #e5e7eb;
      --bg: #f8fafc;
    }
    body { font-family: system-ui, -apple-system, Segoe UI, Roboto, sans-serif; margin: 24px; }
    input, button { font-size: 16px; padding: 8px 12px; }
    button { cursor: pointer; }
    .muted { color: var(--muted); }
    .summary { margin: 12px 0; }
    .section { margin-top: 18px; }
    table { width: 100%; border-collapse: collapse; }
    th, td { border-bottom: 1px solid var(--border); padding: 8px 10px; text-align: left; }
    th { background: var(--bg); font-weight: 600; }
    tr.detail-row td { background: #fffdf5; font-size: 13px; color: #374151; }
    .tag { display: inline-block; padding: 2px 8px; border-radius: 999px; font-size: 12px; font-weight: 600; }
    .tag.ok { background: #ecfdf5; color: var(--ok); border: 1px solid #a7f3d0; }
    .tag.listed { background: #fef2f2; color: var(--listed); border: 1px solid #fecaca; }
    .tag.err { background: #fff7ed; color: var(--err); border: 1px solid #fed7aa; }
    .btn-link { color: #2563eb; background: transparent; border: none; padding: 0; cursor: pointer; }
    .right { text-align: right; white-space: nowrap; }
    .small { font-size: 12px; }
    .hidden { display: none; }
    .ip-header { font-weight: 600; }
  </style>
</head>
<body>
  <h2>RBL Checker (CIDR IPv4)</h2>
  <form id="f">
    <input id="cidr" name="cidr" placeholder="27.76.172.200/29" size="28" required />
    <button>Check</button>
    <span class="small muted">Ví dụ: 27.76.172.200/32 để kiểm tra 1 IP.</span>
  </form>
  <p class="muted">Lưu ý: một số DNSBL như b.barracudacentral.org cần đăng ký, có thể trả về REFUSED/SERVFAIL.</p>

  <div id="out"></div>

  <script>
  const f = document.getElementById('f');
  const out = document.getElementById('out');

  const esc = (s) => String(s)
    .replace(/&/g, '&amp;')
    .replace(/</g, '&lt;')
    .replace(/>/g, '&gt;')
    .replace(/"/g, '&quot;')
    .replace(/'/g, '&#039;');

  function statusTag(detail) {
    if (detail.listed) return '<span class="tag listed">LISTED</span>';
    if (detail.error) return `<span class="tag err">${esc(detail.error)}</span>`;
    return '<span class="tag ok">OK</span>';
  }

  function renderIpResult(r, zonesTotal) {
    const timeouts = r.details.filter(d => d.error === 'DNS timeout').length;
    const listed = r.details.filter(d => d.listed).length;
    const ipHead = `
      <div class="summary ip-header">
        Đang kiểm tra ${esc(r.ip)} trên ${zonesTotal} blacklist... 
        Kết quả: <strong>${listed}</strong> listed, <strong>${timeouts}</strong> timeouts.
      </div>`;

    const rows = r.details.map((d, i) => {
      const rid = `d-${esc(r.ip)}-${i}`;
      const reason = d.listed
        ? `${esc(r.ip)} was listed <button class="btn-link" data-detail="${rid}">Detail</button>`
        : (d.error ? esc(d.error) : '');
      const ttl = (d.ttl ?? '') === '' ? '' : String(d.ttl);
      const ms = (d.ms ?? '') === '' ? '' : String(d.ms);

      const detailRow = d.listed || d.error
        ? `<tr class="detail-row hidden" id="${rid}">
             <td colspan="5">
               ${d.listed ? `<div><strong>A:</strong> ${esc((d.a || []).join(', ') || '-')}</div>` : ''}
               ${d.listed ? `<div><strong>TXT:</strong> ${esc((d.txt || []).join(' | ') || '-')}</div>` : ''}
               ${d.error ? `<div><strong>Note:</strong> ${esc(d.error)}</div>` : ''}
               <div class="small muted">${esc(d.fqdn)}</div>
             </td>
           </tr>`
        : '';

      return `
        <tr>
          <td>${statusTag(d)}</td>
          <td>${esc(d.zone)}</td>
          <td>${reason}</td>
          <td class="right">${ttl}</td>
          <td class="right">${ms}</td>
        </tr>
        ${detailRow}
      `;
    }).join('');

    return `
      ${ipHead}
      <div class="section">
        <table>
          <thead>
            <tr>
              <th>Trạng thái</th>
              <th>Blacklist</th>
              <th>Lý do</th>
              <th class="right">TTL</th>
              <th class="right">Response (ms)</th>
            </tr>
          </thead>
          <tbody>${rows}</tbody>
        </table>
      </div>
    `;
  }

  function renderAll(json) {
    const zonesTotal = json.zonesChecked;
    const blocks = json.results.map(r => renderIpResult(r, zonesTotal)).join('<hr/>');
    const header = `
      <div class="summary">
        Kiểm tra CIDR: <strong>${esc(json.input)}</strong>
        • Network: ${esc(json.network)} • Broadcast: ${esc(json.broadcast)} • Prefix: /${esc(json.prefix)}
        • Usable hosts: ${esc(json.usableHostCount)}
      </div>
    `;
    out.innerHTML = header + blocks;

    // Toggle detail rows
    out.onclick = (e) => {
      const id = e.target && e.target.getAttribute && e.target.getAttribute('data-detail');
      if (!id) return;
      const row = document.getElementById(id);
      if (row) row.classList.toggle('hidden');
    };
  }

  f.addEventListener('submit', async (e) => {
    e.preventDefault();
    const cidr = document.getElementById('cidr').value.trim();
    out.textContent = 'Đang quét...';
    const res = await fetch('/check', {
      method: 'POST',
      headers: {'Content-Type':'application/json'},
      body: JSON.stringify({ cidr })
    });
    const json = await res.json();
    if (res.ok) {
      renderAll(json);
    } else {
      out.innerHTML = `<div class="tag err">${esc(json.error || 'Lỗi không xác định')}</div>`;
    }
  });
  </script>
</body>
</html>
